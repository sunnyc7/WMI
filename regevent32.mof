// Copyright (c) 1997-2003 Microsoft Corporation, All Rights Reserved

#pragma autorecover
#pragma namespace("\\\\.\\Root\\EvilCorp")

class RegistryEvent : __ExtrinsicEvent
{
};

class RegistryKeyChangeEvent : RegistryEvent
{
  string Hive;
  string KeyPath;
};

class RegistryTreeChangeEvent : RegistryEvent
{
  string Hive;
  string RootPath;
};

class RegistryValueChangeEvent : RegistryEvent
{
  string Hive;
  string KeyPath;
  string ValueName;
};

Instance of __Win32Provider as $P
{
  Name = "RegistryEventProvider";
  Clsid = "{fa77a74e-e109-11d0-ad6e-00c04fd8fdff}";
  HostingModel = "LocalSystemHost";
};

Instance of __EventProviderRegistration
{
  Provider = $P;
  EventQueryList = {"select * from RegistryEvent"};
};

Instance of __Win32Provider as $PINST
{
  Name = "RegProv";
  ClsId = "{fe9af5c0-d3b6-11ce-a5b6-00aa00680c3f}";
  ImpersonationLevel = 1;
  HostingModel = "LocalServiceHost";
  version = 3;
};

Instance of __MethodProviderRegistration
{
  Provider = $PINST;
};

Instance of __InstanceProviderRegistration
{
  Provider = $PINST;
  SupportsPut = TRUE;
  SupportsGet = TRUE;
  SupportsDelete = FALSE;
  SupportsEnumeration = TRUE;
};

Instance of __Win32Provider as $PPROP
{
  Name = "RegPropProv";
  Clsid = "{72967901-68EC-11d0-B729-00AA0062CBB7}";
  ImpersonationLevel = 1;
  PerUserInitialization = TRUE;
  HostingModel = "LocalServiceHost";
};

Instance of __PropertyProviderRegistration
{
  Provider = $PPROP;
  SupportsGet = TRUE;
  SupportsPut = TRUE;
};

[Locale(1033),dynamic : ToInstance,provider("RegProv")] 
class StdRegProv
{
  [implemented,static] uint32 CreateKey([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName);
  [implemented,static] uint32 DeleteKey([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName);
  [implemented,static] uint32 EnumKey([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[out] string sNames[]);
  [implemented,static] uint32 EnumValues([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[out] string sNames[],[out] sint32 Types[]);
  [implemented,static] uint32 DeleteValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName);
  [implemented,static] uint32 SetDWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] uint32 uValue = 3);
  [implemented,static] uint32 SetQWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] uint64 uValue = 3);
  [implemented,static] uint32 GetDWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] uint32 uValue);
  [implemented,static] uint32 GetQWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] uint64 uValue);
  [implemented,static] uint32 SetStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] string sValue = "hello");
  [implemented,static] uint32 GetStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] string sValue);
  [implemented,static] uint32 SetMultiStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] string sValue[] = {"hello", "there"});
  [implemented,static] uint32 GetMultiStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] string sValue[]);
  [implemented,static] uint32 SetExpandedStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] string sValue = "%path%");
  [implemented,static] uint32 GetExpandedStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] string sValue);
  [implemented,static] uint32 SetBinaryValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] uint8 uValue[] = {1, 2});
  [implemented,static] uint32 GetBinaryValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] uint8 uValue[]);
  [implemented,static] uint32 CheckAccess([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] uint32 uRequired = 3,[out] boolean bGranted);
  [implemented,static,Privileges{"SeSecurityPrivilege"} : ToSubclass] uint32 SetSecurityDescriptor([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[IN] __SecurityDescriptor Descriptor);
  [implemented,static,Privileges{"SeSecurityPrivilege"} : ToSubclass] uint32 GetSecurityDescriptor([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[OUT] __SecurityDescriptor Descriptor);
};
#pragma namespace("\\\\.\\Root\\cimv2")

class RegistryEvent : __ExtrinsicEvent
{
};

class RegistryKeyChangeEvent : RegistryEvent
{
  string Hive;
  string KeyPath;
};

class RegistryTreeChangeEvent : RegistryEvent
{
  string Hive;
  string RootPath;
};

class RegistryValueChangeEvent : RegistryEvent
{
  string Hive;
  string KeyPath;
  string ValueName;
};

Instance of __Win32Provider as $P1
{
  Name = "RegistryEventProvider";
  Clsid = "{fa77a74e-e109-11d0-ad6e-00c04fd8fdff}";
  HostingModel = "LocalSystemHost";
};

Instance of __EventProviderRegistration
{
  Provider = $P1;
  EventQueryList = {"select * from RegistryEvent"};
};

Instance of __Win32Provider as $PINST1
{
  Name = "RegProv";
  ClsId = "{fe9af5c0-d3b6-11ce-a5b6-00aa00680c3f}";
  ImpersonationLevel = 1;
  HostingModel = "LocalServiceHost";
  version = 3;
};

Instance of __MethodProviderRegistration
{
  Provider = $PINST1;
};

Instance of __InstanceProviderRegistration
{
  Provider = $PINST1;
  SupportsPut = TRUE;
  SupportsGet = TRUE;
  SupportsDelete = FALSE;
  SupportsEnumeration = TRUE;
};

Instance of __Win32Provider as $PPROP1
{
  Name = "RegPropProv";
  Clsid = "{72967901-68EC-11d0-B729-00AA0062CBB7}";
  ImpersonationLevel = 1;
  PerUserInitialization = TRUE;
  HostingModel = "LocalServiceHost";
};

Instance of __PropertyProviderRegistration
{
  Provider = $PPROP1;
  SupportsGet = TRUE;
  SupportsPut = TRUE;
};

[Locale(1033),dynamic : ToInstance,provider("RegProv")] 
class StdRegProv
{
  [implemented,static] uint32 CreateKey([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName);
  [implemented,static] uint32 DeleteKey([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName);
  [implemented,static] uint32 EnumKey([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[out] string sNames[]);
  [implemented,static] uint32 EnumValues([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[out] string sNames[],[out] sint32 Types[]);
  [implemented,static] uint32 DeleteValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName);
  [implemented,static] uint32 SetDWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] uint32 uValue = 3);
  [implemented,static] uint32 SetQWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] uint64 uValue = 3);
  [implemented,static] uint32 GetDWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] uint32 uValue);
  [implemented,static] uint32 GetQWORDValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] uint64 uValue);
  [implemented,static] uint32 SetStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] string sValue = "hello");
  [implemented,static] uint32 GetStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] string sValue);
  [implemented,static] uint32 SetMultiStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] string sValue[] = {"hello", "there"});
  [implemented,static] uint32 GetMultiStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] string sValue[]);
  [implemented,static] uint32 SetExpandedStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] string sValue = "%path%");
  [implemented,static] uint32 GetExpandedStringValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] string sValue);
  [implemented,static] uint32 SetBinaryValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[in] uint8 uValue[] = {1, 2});
  [implemented,static] uint32 GetBinaryValue([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] string sValueName,[out] uint8 uValue[]);
  [implemented,static] uint32 CheckAccess([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[in] uint32 uRequired = 3,[out] boolean bGranted);
  [implemented,static,Privileges{"SeSecurityPrivilege"} : ToSubclass] uint32 SetSecurityDescriptor([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[IN] __SecurityDescriptor Descriptor);
  [implemented,static,Privileges{"SeSecurityPrivilege"} : ToSubclass] uint32 GetSecurityDescriptor([IN] uint32 hDefKey = "2147483650",[IN] string sSubKeyName,[OUT] __SecurityDescriptor Descriptor);
};
#pragma autorecover
#pragma namespace("\\\\.\\Root\\EvilCorp")
instance of __namespace{ name="ms_409";};
#pragma namespace("\\\\.\\Root\\EvilCorp\\ms_409")

[Description("The StdRegProv class contains methods that interact with the system registry. You can use these methods to: \nVerify the access permissions for a user \nCreate, enumerate, and delete registry keys \nCreate, enumerate, and delete named values \nRead, write, and delete data values ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409")] 
class StdRegProv
{
  [Description("The CreateKey method creates a subkey in the specified tree. ") : Amended ToSubclass] uint32 CreateKey([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key to be created. The CreateKey method creates all subkeys specified in the path that do not exist. For example, if MyKey and MySubKey do not exist in the following path, CreateKey creates both keys: \nHKEY_LOCAL_MACHINE\\SOFTWARE\\MyKey\\MySubKey ") : Amended ToSubclass,IN] string sSubKeyName);
  [Description("The DeleteKey method deletes a subkey in the specified tree. ") : Amended ToSubclass] uint32 DeleteKey([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key to be deleted. ") : Amended ToSubclass,IN] string sSubKeyName);
  [Description("The EnumKey method enumerates the subkeys for the given path. ") : Amended ToSubclass] uint32 EnumKey([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the subkeys to be enumerated. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Contains an array of subkey strings. ") : Amended ToSubclass,out] string sNames[]);
  [Description("The EnumValues method enumerates the named values of the given subkey. ") : Amended ToSubclass] uint32 EnumValues([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values to be enumerated. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Contains an array of named value strings. The elements of this array correspond directly with the elements of iTypes. ") : Amended ToSubclass,out] string sNames[],[Description("Contains an array of data value types (integers). You can use these types to determine which Get method to call. For example, if the data value type is REG_SZ, you would call GetStringValue to retrieve the named value's data value. The elements of this array correspond directly with the elements of sNames. The following data value types are defined in Winnt.h: \nREG_SZ (1) \nREG_EXPAND_SZ (2) \nREG_BINARY (3) \nREG_DWORD (4) \nREG_MULTI_SZ (7) \n") : Amended ToSubclass,out] sint32 Types[]);
  [Description("The DeleteValue method deletes a named value in the specified subkey.") : Amended ToSubclass] uint32 DeleteValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be deleted. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value to be deleted from the subkey. Specify an empty string to delete the default named value (the default named value is not deleted its value is set to \"value not set\"") : Amended ToSubclass,in] string sValueName);
  [Description("The SetDWORDValue method sets the data value for a named value whose data type is REG_BINARY. ") : Amended ToSubclass] uint32 SetDWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies a double word data value. ") : Amended ToSubclass,in] uint32 uValue);
  [Description("The SetQWORDValue method sets the data value for a named value whose data type is REG_QWORD. ") : Amended ToSubclass] uint32 SetQWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies a quad word data value. ") : Amended ToSubclass,in] uint64 uValue);
  [Description("The GetDWORDValue method returns the data value for a named value whose data type is REG_DWORD. ") : Amended ToSubclass] uint32 GetDWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value.") : Amended ToSubclass,in] string sValueName,[Description("Contains the DWORD data value for the named value. ") : Amended ToSubclass,out] uint32 uValue);
  [Description("The GetQWORDValue method returns the data value for a named value whose data type is REG_QWORD. ") : Amended ToSubclass] uint32 GetQWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value.") : Amended ToSubclass,in] string sValueName,[Description("Contains the DWORD data value for the named value. ") : Amended ToSubclass,out] uint64 uValue);
  [Description("The SetStringValue method sets the data value for a named value whose data type is REG_MULTI_SZ.") : Amended ToSubclass] uint32 SetStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies a string data value.") : Amended ToSubclass,in] string sValue);
  [Description("The GetStringValue method returns the data value for a named value whose data type is REG_SZ. ") : Amended ToSubclass] uint32 GetStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains the string data value for the named value. ") : Amended ToSubclass,out] string sValue);
  [Description("The SetMultiStringValue method sets the data value for a named value whose data type is REG_MULTI_SZ. The SetMultiStringValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetMultiStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies an array of string data values. ") : Amended ToSubclass,in] string sValue[]);
  [Description("The GetMultiStringValue method returns the data value for a named value whose data type is REG_MULTI_SZ. The GetMultiStringValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 GetMultiStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains an array of string data values for the named value. ") : Amended ToSubclass,out] string sValue[]);
  [Description("The SetExpandedStringValue method sets the data value for a named value whose data type is REG_EXPAND_SZ. The SetExpandedStringValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetExpandedStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies an expanded string data value. The environment variable specified in the string must exist for the string to be expanded when you call GetExpandedStringValue. ") : Amended ToSubclass,in] string sValue);
  [Description("The GetExpandedStringValue method returns the data value for a named value whose data type is REG_EXPAND_SZ. ") : Amended ToSubclass] uint32 GetExpandedStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains the expanded string data value for the named value. The string is only expanded if the environment variable (for example, %Path%) is defined. ") : Amended ToSubclass,out] string sValue);
  [Description("The SetBinaryValue method sets the data value for a named value whose data type is REG_BINARY. The SetBinaryValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetBinaryValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies an array of binary data values. ") : Amended ToSubclass,in] uint8 uValue[]);
  [Description("The GetBinaryValue method returns the data value for a named value whose data type is REG_BINARY. The GetBinaryValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 GetBinaryValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains an array of binary bytes. ") : Amended ToSubclass,out] uint8 uValue[]);
  [Description("The CheckAccess method verifies that the user possesses the specified permissions. The method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 CheckAccess([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key to be verified. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Optional parameter that specifies the access permissions to be verified. You can add these values together to verify more than one access permission. The default value is 3. The following access permission values are defined in Winnt.h: \nKEY_QUERY_VALUE (0X0001) \nKEY_SET_VALUE (0X0002) \nKEY_CREATE_SUB_KEY (0X0004) \nKEY_ENUMERATE_SUB_KEYS (0X0008) \nKEY_NOTIFY (0X0010) \nKEY_CREATE_LINK (0X0020) \nDELETE (0x00010000) \nREAD_CONTROL (0x00020000) \nWRITE_DAC (0X00040000) \nWRITE_OWNER (0X00080000) ") : Amended ToSubclass,in] uint32 uRequired,[Description("This parameter is True if user possesses the specified access permissions. Otherwise, the parameter is False. ") : Amended ToSubclass,out] boolean bGranted);
  [Description("The SetSecurityDescriptor method updates the specified key's security descriptor with the supplied __SecurityDescriptor. The method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetSecurityDescriptor([Description("Parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \n") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key name to set the security descriptor on. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Contains the security descriptor to set on the key name. ") : Amended ToSubclass,IN] __SecurityDescriptor Descriptor);
  [Description("The GetSecurityDescriptor method returns the specified key's security descriptor in a __SecurityDescriptor. The method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 GetSecurityDescriptor([Description("Parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \n") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key name to get the security descriptor for. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Returns the security descriptor from the key name. ") : Amended ToSubclass,OUT] __SecurityDescriptor Descriptor);
};
#pragma namespace("\\\\.\\Root\\cimv2")
instance of __namespace{ name="ms_409";};
#pragma namespace("\\\\.\\Root\\cimv2\\ms_409")

[Description("The StdRegProv class contains methods that interact with the system registry. You can use these methods to: \nVerify the access permissions for a user \nCreate, enumerate, and delete registry keys \nCreate, enumerate, and delete named values \nRead, write, and delete data values ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409")] 
class StdRegProv
{
  [Description("The CreateKey method creates a subkey in the specified tree. ") : Amended ToSubclass] uint32 CreateKey([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key to be created. The CreateKey method creates all subkeys specified in the path that do not exist. For example, if MyKey and MySubKey do not exist in the following path, CreateKey creates both keys: \nHKEY_LOCAL_MACHINE\\SOFTWARE\\MyKey\\MySubKey ") : Amended ToSubclass,IN] string sSubKeyName);
  [Description("The DeleteKey method deletes a subkey in the specified tree. ") : Amended ToSubclass] uint32 DeleteKey([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key to be deleted. ") : Amended ToSubclass,IN] string sSubKeyName);
  [Description("The EnumKey method enumerates the subkeys for the given path. ") : Amended ToSubclass] uint32 EnumKey([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the subkeys to be enumerated. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Contains an array of subkey strings. ") : Amended ToSubclass,out] string sNames[]);
  [Description("The EnumValues method enumerates the named values of the given subkey. ") : Amended ToSubclass] uint32 EnumValues([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values to be enumerated. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Contains an array of named value strings. The elements of this array correspond directly with the elements of iTypes. ") : Amended ToSubclass,out] string sNames[],[Description("Contains an array of data value types (integers). You can use these types to determine which Get method to call. For example, if the data value type is REG_SZ, you would call GetStringValue to retrieve the named value's data value. The elements of this array correspond directly with the elements of sNames. The following data value types are defined in Winnt.h: \nREG_SZ (1) \nREG_EXPAND_SZ (2) \nREG_BINARY (3) \nREG_DWORD (4) \nREG_MULTI_SZ (7) \n") : Amended ToSubclass,out] sint32 Types[]);
  [Description("The DeleteValue method deletes a named value in the specified subkey.") : Amended ToSubclass] uint32 DeleteValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be deleted. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value to be deleted from the subkey. Specify an empty string to delete the default named value (the default named value is not deleted its value is set to \"value not set\"") : Amended ToSubclass,in] string sValueName);
  [Description("The SetDWORDValue method sets the data value for a named value whose data type is REG_BINARY. ") : Amended ToSubclass] uint32 SetDWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies a double word data value. ") : Amended ToSubclass,in] uint32 uValue);
  [Description("The SetQWORDValue method sets the data value for a named value whose data type is REG_QWORD. ") : Amended ToSubclass] uint32 SetQWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies a quad word data value. ") : Amended ToSubclass,in] uint64 uValue);
  [Description("The GetDWORDValue method returns the data value for a named value whose data type is REG_DWORD. ") : Amended ToSubclass] uint32 GetDWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value.") : Amended ToSubclass,in] string sValueName,[Description("Contains the DWORD data value for the named value. ") : Amended ToSubclass,out] uint32 uValue);
  [Description("The GetQWORDValue method returns the data value for a named value whose data type is REG_QWORD. ") : Amended ToSubclass] uint32 GetQWORDValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value.") : Amended ToSubclass,in] string sValueName,[Description("Contains the DWORD data value for the named value. ") : Amended ToSubclass,out] uint64 uValue);
  [Description("The SetStringValue method sets the data value for a named value whose data type is REG_MULTI_SZ.") : Amended ToSubclass] uint32 SetStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies a string data value.") : Amended ToSubclass,in] string sValue);
  [Description("The GetStringValue method returns the data value for a named value whose data type is REG_SZ. ") : Amended ToSubclass] uint32 GetStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains the string data value for the named value. ") : Amended ToSubclass,out] string sValue);
  [Description("The SetMultiStringValue method sets the data value for a named value whose data type is REG_MULTI_SZ. The SetMultiStringValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetMultiStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies an array of string data values. ") : Amended ToSubclass,in] string sValue[]);
  [Description("The GetMultiStringValue method returns the data value for a named value whose data type is REG_MULTI_SZ. The GetMultiStringValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 GetMultiStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains an array of string data values for the named value. ") : Amended ToSubclass,out] string sValue[]);
  [Description("The SetExpandedStringValue method sets the data value for a named value whose data type is REG_EXPAND_SZ. The SetExpandedStringValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetExpandedStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies an expanded string data value. The environment variable specified in the string must exist for the string to be expanded when you call GetExpandedStringValue. ") : Amended ToSubclass,in] string sValue);
  [Description("The GetExpandedStringValue method returns the data value for a named value whose data type is REG_EXPAND_SZ. ") : Amended ToSubclass] uint32 GetExpandedStringValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains the expanded string data value for the named value. The string is only expanded if the environment variable (for example, %Path%) is defined. ") : Amended ToSubclass,out] string sValue);
  [Description("The SetBinaryValue method sets the data value for a named value whose data type is REG_BINARY. The SetBinaryValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetBinaryValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the key that contains the named value to be set. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are setting. You can specify an existing named value (update) or a new named value (create). Specify an empty string to set the data value for the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Specifies an array of binary data values. ") : Amended ToSubclass,in] uint8 uValue[]);
  [Description("The GetBinaryValue method returns the data value for a named value whose data type is REG_BINARY. The GetBinaryValue method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 GetBinaryValue([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Specifies the path that contains the named values. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Specifies the named value whose data value you are retrieving. Specify an empty string to get the default named value. ") : Amended ToSubclass,in] string sValueName,[Description("Contains an array of binary bytes. ") : Amended ToSubclass,out] uint8 uValue[]);
  [Description("The CheckAccess method verifies that the user possesses the specified permissions. The method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 CheckAccess([Description("Optional parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \nHKEY_DYN_DATA (0x80000006) \nNote that HKEY_DYN_DATA is a valid tree for Windows 95 and Windows 98 computers only. ") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key to be verified. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Optional parameter that specifies the access permissions to be verified. You can add these values together to verify more than one access permission. The default value is 3. The following access permission values are defined in Winnt.h: \nKEY_QUERY_VALUE (0X0001) \nKEY_SET_VALUE (0X0002) \nKEY_CREATE_SUB_KEY (0X0004) \nKEY_ENUMERATE_SUB_KEYS (0X0008) \nKEY_NOTIFY (0X0010) \nKEY_CREATE_LINK (0X0020) \nDELETE (0x00010000) \nREAD_CONTROL (0x00020000) \nWRITE_DAC (0X00040000) \nWRITE_OWNER (0X00080000) ") : Amended ToSubclass,in] uint32 uRequired,[Description("This parameter is True if user possesses the specified access permissions. Otherwise, the parameter is False. ") : Amended ToSubclass,out] boolean bGranted);
  [Description("The SetSecurityDescriptor method updates the specified key's security descriptor with the supplied __SecurityDescriptor. The method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 SetSecurityDescriptor([Description("Parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \n") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key name to set the security descriptor on. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Contains the security descriptor to set on the key name. ") : Amended ToSubclass,IN] __SecurityDescriptor Descriptor);
  [Description("The GetSecurityDescriptor method returns the specified key's security descriptor in a __SecurityDescriptor. The method returns a uint32 which is 0 if successful or some other value if any other error occurred.") : Amended ToSubclass] uint32 GetSecurityDescriptor([Description("Parameter that specifies the tree that contains the sSubKeyName path. The default value is HKEY_LOCAL_MACHINE (0x80000002). The following trees are defined in Winreg.h: \nHKEY_CLASSES_ROOT (0x80000000) \nHKEY_CURRENT_USER (0x80000001) \nHKEY_LOCAL_MACHINE (0x80000002) \nHKEY_USERS (0x80000003) \nHKEY_CURRENT_CONFIG (0x80000005) \n") : Amended ToSubclass,IN] uint32 hDefKey,[Description("Contains the key name to get the security descriptor for. ") : Amended ToSubclass,IN] string sSubKeyName,[Description("Returns the security descriptor from the key name. ") : Amended ToSubclass,OUT] __SecurityDescriptor Descriptor);
};
